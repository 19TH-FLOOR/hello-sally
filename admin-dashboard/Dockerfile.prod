# 프로덕션용 Dockerfile
FROM node:18-alpine AS builder

WORKDIR /app

# package.json과 package-lock.json 복사 (캐싱 최적화)
COPY package.json package-lock.json ./

# 의존성 설치 (프로덕션 의존성만)
RUN npm ci --omit=dev --ignore-scripts && npm cache clean --force

# 소스 코드 복사
COPY . .

# public 디렉토리가 없으면 생성 (빌더 단계에서)
RUN mkdir -p /app/public

# 빌드 시점에 필요한 환경변수 설정
ENV API_URL=http://api-server:8000
ENV NODE_ENV=production

# Node.js 메모리 제한 증가 및 빌드 최적화 (GitHub Actions용)
ENV NODE_OPTIONS="--max-old-space-size=8192 --max-semi-space-size=512"
ENV NEXT_TELEMETRY_DISABLED=1
ENV CI=true

# Next.js 빌드 (GitHub Actions 환경 최적화)
RUN npm run build:ci

# 프로덕션 이미지
FROM node:18-alpine AS runner

WORKDIR /app

ENV NODE_ENV=production

# 사용자 추가 (보안 강화)
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# 필요한 파일들만 복사
COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 3000

ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

CMD ["node", "server.js"] 